{"name":"guachiman","tagline":"Minimal authorization library","body":"Guachiman\r\n=========\r\n\r\nMinimal authorization library inspired by [RailsCast #385 Authorization from Scratch][1] by Ryan Bates.\r\n\r\nGuachiman allows you to store authorization rules as a tree of permissions nested within groups.\r\nPermissions can be either `true` or a block that takes an object. In that case the permission will\r\nbe the result of the block evaluation.\r\n\r\n[![Codeship Status for goddamnhippie/guachiman][2]][3]\r\n\r\n[1]: http://railscasts.com/episodes/385-authorization-from-scratch-part-1\r\n[2]: https://www.codeship.io/projects/f3a90030-f43c-0131-65bd-5a054a318c0e/status\r\n[3]: https://www.codeship.io/projects/28071\r\n\r\n\r\nUpgrading to ~> 1.0.0\r\n---------------------\r\n\r\n**Starting with version 1.0.0 all Rails-specific code and support has been removed.**\r\nA new gem called [guachiman-rails][4] will be the recommended way to use Guachiman with Rails.\r\n\r\n[4]: https://github.com/goddamnhippie/guachiman-rails\r\n\r\n\r\nInstallation\r\n------------\r\n\r\nAdd this line to your application's `Gemfile`:\r\n\r\n```ruby\r\ngem 'guachiman'\r\n```\r\n\r\nAnd then execute:\r\n\r\n```bash\r\n$ bundle\r\n```\r\n\r\nOr install it directly:\r\n\r\n```bash\r\n$ gem install guachiman\r\n```\r\n\r\n\r\nUsage\r\n-----\r\n\r\nDescribe your authorization objects in this way:\r\n\r\n```ruby\r\nclass Authorization\r\n  include Guachiman\r\n\r\n  def initialize(user = nil)\r\n    if @current_user = user\r\n      user_authorization\r\n    else\r\n      guest_authorization\r\n    end\r\n  end\r\n\r\nprivate\r\n\r\n  def guest_authorization\r\n    allow :sessions, [:new]\r\n  end\r\n\r\n  def user_authorization\r\n    guest_authorization\r\n\r\n    allow :users, [:show, :edit, :update] do |user_id|\r\n      @current_user.id == user_id\r\n    end\r\n  end\r\nend\r\n```\r\n\r\nSo that you can use them like this:\r\n\r\n```ruby\r\nuser  = User.find(user_id)\r\n\r\nguest_authorization = Authorization.new\r\nuser_authorization  = Authorization.new(user)\r\n\r\nguest_authorization.allow?(:sessions, :new)\r\n# => true\r\n\r\nuser_authorization.allow?(:users, :show)\r\n# => false\r\n\r\nuser_authorization.allow?(:users, :show, user.id)\r\n# => true\r\n```\r\n\r\n### `#allow`\r\n\r\nThis is what you use to set permissions. It takes two parameters, `group` and `permissions`, and an optional block.\r\n\r\n### `#allow?`\r\n\r\nThis is what you use to check permissions. It takes a `group` param, a `permission` param, and an optional `object`\r\nparam to evaluate in the block.\r\n\r\n\r\nLicense\r\n-------\r\n\r\nMIT\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}